plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    // Add the Google services Gradle plugin
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.main"
    compileSdk = flutter.compileSdkVersion
    ndkVersion "26.1.10909125"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId = "com.example.main"
        minSdkVersion 23
        targetSdkVersion 34
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    /*signingConfigs {
      release {
        keyAlias 'my-key-alias'
        keyPassword 'keypass'
        storeFile file('absolute path')
        storePassword 'storekey'
    }
    
}*/


  buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            //signingConfig = signingConfigs.release
            shrinkResources false
            // Enable ProGuard or R8 for release builds
            minifyEnabled false
            
            // Specify ProGuard rules file
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            zipAlignEnabled true
        }
    }

    lint {
        baseline = file("lint-baseline.xml")
    }

}

dependencies {
    // Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:33.3.0')

    // Firebase Authentication
    implementation 'com.google.firebase:firebase-auth:23.0.0'
    
    // Firebase Firestore
    implementation 'com.google.firebase:firebase-firestore:25.1.0'
    
    // Firebase Analytics
    implementation 'com.google.firebase:firebase-analytics:22.1.0'
    
    // Optional: Google Sign-In
    implementation 'com.google.android.gms:play-services-auth:21.2.0'

    implementation 'com.google.android.gms:play-services-maps:19.0.0'

    // https://firebase.google.com/docs/android/setup#available-libraries
}

apply plugin: 'com.google.gms.google-services'

flutter {
    source = "../.."
}
